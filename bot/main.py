import logging
from io import BytesIO

import requests
import telebot
from decouple import config
from telebot import types
from telebot.types import InputMediaDocument

from bot.db import get_call_schedule, save_call_schedule
from bot.efficiency import percent_t_avg
from bot.keep_alive import keep_alive
from parsing.main import (call_schedule_parser, class_schedule_parser, rating_list_parser, scholarship_list_parser,
                          session_schedule_parser, timetable_calendar_parser)

TOKEN = config('TOKEN')
bot = telebot.TeleBot(TOKEN)

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

schedule_cache = {}
session_cache = {}

COURSE_LABELS = [
    "1 –∫—É—Ä—Å", "2 –∫—É—Ä—Å", "3 –∫—É—Ä—Å", "4 –∫—É—Ä—Å",
    "–ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–∏–π –∫—É—Ä—Å (2 —Å–µ–º–µ—Å—Ç—Ä)",
    "–ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–∏–π –∫—É—Ä—Å (4 —Å–µ–º–µ—Å—Ç—Ä)",
    "–ú–∞–≥—ñ—Å—Ç—Ä–∏ (1 –∫—É—Ä—Å)"
]

SESSION_COURSE_LABELS = [
    "1 –∫—Ép—Å", "2 –∫—Ép—Å", "3 –∫—Ép—Å", "4 –∫—Ép—Å",
    "–ü—Ä–∏—Å–∫–æp–µ–Ω–∏–π –∫—É—Ä—Å (2 —Å–µ–º–µ—Å—Ç—Ä)", "–ü—Ä–∏—Å–∫–æp–µ–Ω–∏–π –∫—É—Ä—Å (4 —Å–µ–º–µ—Å—Ç—Ä)"
]

ABOUT = f"""
üìö –¶–µ–π Telegram-–∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —ñ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫—ñ–≤ –î–æ–Ω–±–∞—Å—å–∫–æ—ó –¥–µ—Ä–∂–∞–≤–Ω–æ—ó –º–∞—à–∏–Ω–æ–±—É–¥—ñ–≤–Ω–æ—ó –∞–∫–∞–¥–µ–º—ñ—ó. –ô–æ–≥–æ –º–µ—Ç–∞ ‚Äî –∑–∞–±–µ–∑–ø–µ—á–∏—Ç–∏ —à–≤–∏–¥–∫–∏–π, –∑—Ä—É—á–Ω–∏–π —ñ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –Ω–∞–≤—á–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.

üîç –ó–∞–º—ñ—Å—Ç—å —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ–≥–æ –ø–æ—à—É–∫—É –Ω–∞ —Å–∞–π—Ç–∞—Ö –∞–∫–∞–¥–µ–º—ñ—ó —á–∏ –∫–∞—Ñ–µ–¥—Ä, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –º–æ–∂—É—Ç—å –æ—Ç—Ä–∏–º–∞—Ç–∏ —á–∞—Å—Ç–∏–Ω—É –Ω–∞–π–≤–∞–∂–ª–∏–≤—ñ—à–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó ‚Äî —Ä–æ–∑–∫–ª–∞–¥–∏, –¥–æ–∫—É–º–µ–Ω—Ç–∏ —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è ‚Äî –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –≤ Telegram. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–±–∏—Ä–∞—î –π –æ–±—Ä–æ–±–ª—è—î –¥–æ—Å—Ç—É–ø–Ω—ñ –¥–∞–Ω—ñ, —â–æ –∑–Ω–∞—á–Ω–æ —Å–ø—Ä–æ—â—É—î –ø—Ä–æ—Ü–µ—Å —ñ –∑–∞–æ—â–∞–¥–∂—É—î —á–∞—Å.

üìà –£ –¥–µ—è–∫–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–æ—Ç–∞ ‚Äî –Ω–∞ {percent_t_avg:.1f}% –≤–∏—â–∞ –∑–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∞–π—Ç–æ–º —É –ø–ª–∞–Ω—ñ –≤–∏—Ç—Ä–∞—á–µ–Ω–æ–≥–æ —á–∞—Å—É.

üíª –ü—Ä–æ—î–∫—Ç —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–º –∫–∞—Ñ–µ–¥—Ä–∏ ¬´–Ü–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∏—Ö —Å–∏—Å—Ç–µ–º –ø—Ä–∏–π–Ω—è—Ç—Ç—è —Ä—ñ—à–µ–Ω—å¬ª, —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ ¬´–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ —Å–∏—Å—Ç–µ–º–∏ —Ç–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó¬ª. –ù–∞—É–∫–æ–≤–∏–π –∫–µ—Ä—ñ–≤–Ω–∏–∫ –ø—Ä–æ—î–∫—Ç—É ‚Äî –∫–∞–Ω–¥–∏–¥–∞—Ç —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö –Ω–∞—É–∫, –¥–æ—Ü–µ–Ω—Ç, –≤. –æ. –∑–∞–≤. –≤–∏—â–µ–∑–≥–∞–¥–∞–Ω–æ—ó –∫–∞—Ñ–µ–¥—Ä–∏ –û–ª–µ–∫—Å–∞–Ω–¥—Ä –Æ—Ä—ñ–π–æ–≤–∏—á –ú–µ–ª—å–Ω–∏–∫–æ–≤.
"""


@bot.message_handler(commands=['start'])
def send_bot_menu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    button1 = types.KeyboardButton('Moodle')
    button2 = types.KeyboardButton('Web-—Ä–µ—Å—É—Ä—Å–∏ —Ç–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ –î–î–ú–ê')
    button3 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤')
    button4 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å')
    button5 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ —Å–µ—Å—ñ—ó')
    button6 = types.KeyboardButton('–†–µ–π—Ç–∏–Ω–≥ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤')
    button7 = types.KeyboardButton('–°—Ç–∏–ø–µ–Ω–¥—ñ–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫')
    button8 = types.KeyboardButton('–¢–∞–±–µ–ª—å-–∫–∞–ª–µ–Ω–¥–∞—Ä')
    button9 = types.KeyboardButton('About')

    markup.add(button1, button2, button3, button4, button5, button6, button7, button8, button9)

    bot.send_message(
        message.chat.id,
        'ü§ñ –í—ñ—Ç–∞—é! –Ø Telegram-–±–æ—Ç –î–î–ú–ê, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ —Ç–∞ —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ –Ω–∞–≤—á–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó. –î–æ–ø–æ–º–æ–∂—É –∑–Ω–∞–π—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥, –≤–∞–∂–ª–∏–≤—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ —Ç–∞ –∫–æ—Ä–∏—Å–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.',
        reply_markup=markup
    )

# -----------------------------------------------------------------------------------
# ----------------------------- THE DIFFERENT APPROACH ------------------------------


# @bot.message_handler(commands=['call_schedule'])
# def send_call_schedule(message):
#     text, image_url, page_url = call_schedule_parser()
#     text = "\n".join(text) + "\n\n" + f'–î–∂–µ—Ä–µ–ª–æ: {page_url}'
#     response = requests.get(image_url, stream=True)

#     bot.send_photo(message.chat.id, response.raw, caption=text)


# @bot.message_handler(commands=['call_schedule_db'])
# def send_call_schedule_db(message):
#     try:
#         content = get_call_schedule()
#         bot.send_message(message.chat.id, content)
#     except Exception as e:
#         logger.error("ERROR!!!", exc_info=e)
#         bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö!")


# @bot.message_handler(commands=['update_call_schedule_db'])
# def update_call_schedule_db(message):
#     bot.send_message(message.chat.id, "‚è≥ –û–Ω–æ–≤–ª—é—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...")

#     try:
#         text, image_url, page_url = call_schedule_parser()
#         save_call_schedule(text)
#         bot.send_message(message.chat.id, "‚úÖ –û–Ω–æ–≤–ª–µ–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö!")
#     except Exception as e:
#         logger.error("ERROR!!!", exc_info=e)
#         bot.send_message(message.chat.id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –Ω–µ –≤–¥–∞–ª–æ—Å—è: {e}")

# ----------------------------- THE DIFFERENT APPROACH ------------------------------
# -----------------------------------------------------------------------------------


@bot.message_handler(commands=['call_schedule'])
def send_call_schedule(message):
    chat_id = message.chat.id

    try:
        text_lines, image_url, page_url = call_schedule_parser()
        save_call_schedule(text_lines)

        caption = "\n".join(text_lines) + f"\n\n–î–∂–µ—Ä–µ–ª–æ: {page_url}"

        resp = requests.get(image_url, stream=True, timeout=5)
        resp.raise_for_status()

        bot.send_photo(chat_id, resp.raw, caption=caption)
    except Exception as e:
        logger.error("ERROR!!!", exc_info=e)
        bot.send_message(
            chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ –≤–µ–±—Å–∞–π—Ç—É! –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...")

        try:
            content = get_call_schedule()
            bot.send_message(chat_id, content)
        except Exception as db_e:
            logger.error("ERROR!!!", exc_info=db_e)
            bot.send_message(chat_id, "‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö!")

# -----------------------------------------------------------------------------------


@bot.message_handler(commands=['class_schedule'])
def send_class_schedule(message):
    text, image_urls, page_url = class_schedule_parser()
    text = f"{text}\n\n–î–∂–µ—Ä–µ–ª–æ: {page_url}"

    for image_url in image_urls:
        response = requests.get(image_url)

        if response.status_code == 200:
            image_data = BytesIO(response.content)
            bot.send_document(message.chat.id, document=image_data, caption=text)
        else:
            bot.send_message(message.chat.id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {image_url}")

# -----------------------------------------------------------------------------------


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type != 'private':
        pass

    chat_id = message.chat.id
    file_text = message.text

# -----------------------------------------------------------------------------------

    def go_to_website(msg, link):
        inline = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text=msg.text, url=link)
        inline.add(btn)

        bot.send_message(msg.chat.id, "üîó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ä–µ—Å—É—Ä—Å:", reply_markup=inline)

# -----------------------------------------------------------------------------------

    if file_text == '–ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        button1 = types.KeyboardButton('Moodle')
        button2 = types.KeyboardButton('Web-—Ä–µ—Å—É—Ä—Å–∏ —Ç–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ –î–î–ú–ê')
        button3 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤')
        button4 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å')
        button5 = types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ —Å–µ—Å—ñ—ó')
        button6 = types.KeyboardButton('–†–µ–π—Ç–∏–Ω–≥ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤')
        button7 = types.KeyboardButton('–°—Ç–∏–ø–µ–Ω–¥—ñ–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫')
        button8 = types.KeyboardButton('–¢–∞–±–µ–ª—å-–∫–∞–ª–µ–Ω–¥–∞—Ä')
        button9 = types.KeyboardButton('About')

        markup.add(button1, button2, button3, button4, button5, button6, button7, button8, button9)

        bot.send_message(
            message.chat.id, 'üîô –ù–∞–∑–∞–¥', reply_markup=markup)

# -----------------------------------------------------------------------------------

    if file_text == 'Web-—Ä–µ—Å—É—Ä—Å–∏ —Ç–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ –î–î–ú–ê':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton('–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π –°–∞–π—Ç')
        button2 = types.KeyboardButton('YouTube')
        button3 = types.KeyboardButton('Telegram')
        button4 = types.KeyboardButton('Telegram-—á–∞—Ç')
        button5 = types.KeyboardButton('LinkedIn')
        button6 = types.KeyboardButton('Instagram')
        button7 = types.KeyboardButton('Facebook')
        button8 = types.KeyboardButton('Facebook: –ú–µ–¥—ñ–∞-–ì—Ä—É–ø–∞ –î–î–ú–ê')
        button9 = types.KeyboardButton('–ö–∞—Ñ–µ–¥—Ä–∞ –Ü–°–ü–†')
        button10 = types.KeyboardButton('–ù–∞–∑–∞–¥')

        markup.add(button1, button2, button3, button4, button5, button6, button7, button8, button9, button10)
        bot.send_message(chat_id, '‚úÖ –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π:', reply_markup=markup)

    if file_text == "Moodle":
        go_to_website(message, "http://moodle-new.dgma.donetsk.ua/")

    if file_text == "–û—Ñ—ñ—Ü—ñ–π–Ω–∏–π –°–∞–π—Ç":
        go_to_website(message, "http://www.dgma.donetsk.ua/")

    if file_text == "YouTube":
        go_to_website(message, "https://www.youtube.com/user/mediagrupaAcademia")

    if file_text == "Telegram":
        go_to_website(message, "https://t.me/ddma_official")

    if file_text == "Telegram-—á–∞—Ç":
        go_to_website(message, "https://bit.ly/36Wc2kB")

    if file_text == "LinkedIn":
        go_to_website(message, "https://www.linkedin.com/school/donbas-state-engineering-academy-dsea/")

    if file_text == "Instagram":
        go_to_website(message, "https://www.instagram.com/ddma_official/")

    if file_text == "Facebook":
        go_to_website(message, "https://www.facebook.com/ddma.kramatorsk/")

    if file_text == "Facebook: –ú–µ–¥—ñ–∞-–ì—Ä—É–ø–∞ –î–î–ú–ê":
        go_to_website(message, "https://www.facebook.com/groups/mediagrupa/")

    if file_text == "–ö–∞—Ñ–µ–¥—Ä–∞ –Ü–°–ü–†":
        go_to_website(message, "http://www.dgma.donetsk.ua/~kiber/")

# -----------------------------------------------------------------------------------

    if file_text == 'About':
        bot.send_message(message.chat.id, ABOUT)

# -----------------------------------------------------------------------------------

    if file_text == '–†–æ–∑–∫–ª–∞–¥ –¥–∑–≤—ñ–Ω–∫—ñ–≤':
        bot.send_message(message.chat.id, '‚è≥ –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...')
        send_call_schedule(message)

# -----------------------------------------------------------------------------------

    if file_text == '–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('1 –∫—É—Ä—Å')
        btn2 = types.KeyboardButton('2 –∫—É—Ä—Å')
        btn3 = types.KeyboardButton('3 –∫—É—Ä—Å')
        btn4 = types.KeyboardButton('4 –∫—É—Ä—Å')
        btn5 = types.KeyboardButton('–ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–∏–π –∫—É—Ä—Å (2 —Å–µ–º–µ—Å—Ç—Ä)')
        btn6 = types.KeyboardButton('–ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–∏–π –∫—É—Ä—Å (4 —Å–µ–º–µ—Å—Ç—Ä)')
        btn7 = types.KeyboardButton('–ú–∞–≥—ñ—Å—Ç—Ä–∏ (1 –∫—É—Ä—Å)')
        btn8 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8)

        bot.send_message(chat_id, '‚úÖ –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π:', reply_markup=markup)

        title, image_urls, page_url = class_schedule_parser()
        schedule_cache[chat_id] = (title, image_urls, page_url)

    if file_text in COURSE_LABELS:
        if chat_id not in schedule_cache:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å'))

            bot.send_message(chat_id, 'üîÑ –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å". –ô–¥–µ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö...',
                             reply_markup=markup)
            return

        bot.send_message(chat_id, '‚è≥ –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...')

        title, image_urls, page_url = schedule_cache[chat_id]
        idx = COURSE_LABELS.index(file_text)

        try:
            url = image_urls[idx]
        except (IndexError, TypeError):
            bot.send_message(chat_id, "‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞!")

        resp = requests.get(url)

        if resp.status_code == 200:
            bio = BytesIO(resp.content)
            filename = f"–†–æ–∑–∫–ª–∞–¥ –∑–∞–Ω—è—Ç—å - {file_text}.png"
            bio.name = filename
            caption = f"{file_text} | {title} \n\n–î–∂–µ—Ä–µ–ª–æ: {page_url}"
            bot.send_document(chat_id, document=bio, caption=caption)
        else:
            bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {url}")

# -----------------------------------------------------------------------------------

    if file_text == '–†–æ–∑–∫–ª–∞–¥ —Å–µ—Å—ñ—ó':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('1 –∫—Ép—Å')
        btn2 = types.KeyboardButton('2 –∫—Ép—Å')
        btn3 = types.KeyboardButton('3 –∫—Ép—Å')
        btn4 = types.KeyboardButton('4 –∫—Ép—Å')
        btn5 = types.KeyboardButton('–ü—Ä–∏—Å–∫–æp–µ–Ω–∏–π –∫—É—Ä—Å (2 —Å–µ–º–µ—Å—Ç—Ä)')
        btn6 = types.KeyboardButton('–ü—Ä–∏—Å–∫–æp–µ–Ω–∏–π –∫—É—Ä—Å (4 —Å–µ–º–µ—Å—Ç—Ä)')
        btn7 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7)

        bot.send_message(chat_id, '‚úÖ –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π:', reply_markup=markup)

        title, image_urls, page_url = session_schedule_parser()
        session_cache[chat_id] = (title, image_urls, page_url)

    if file_text in SESSION_COURSE_LABELS:
        if chat_id not in session_cache:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(types.KeyboardButton('–†–æ–∑–∫–ª–∞–¥ —Å–µ—Å—ñ—ó'))
            bot.send_message(chat_id, 'üîÑ –ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–†–æ–∑–∫–ª–∞–¥ —Å–µ—Å—ñ—ó". –ô–¥–µ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö...',
                             reply_markup=markup)
            return

        bot.send_message(chat_id, '‚è≥ –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...')

        title, image_urls, page_url = session_cache[chat_id]
        idx = SESSION_COURSE_LABELS.index(file_text)

        try:
            url = image_urls[idx]
        except (IndexError, TypeError):
            bot.send_message(chat_id, "‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞!")
            return

        resp = requests.get(url)

        if resp.status_code == 200:
            bio = BytesIO(resp.content)
            filename = f"–†–æ–∑–∫–ª–∞–¥ —Å–µ—Å—ñ—ó - {file_text.replace('–°–µ—Å—ñ—è ‚Äî ', '')}.png"
            bio.name = filename
            caption = f"{file_text} | {title} \n\n–î–∂–µ—Ä–µ–ª–æ: {page_url}"
            bot.send_document(chat_id, document=bio, caption=caption)
        else:
            bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {url}")

# -----------------------------------------------------------------------------------

    if file_text == '–†–µ–π—Ç–∏–Ω–≥ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–§–ê–ú–Ü–¢')
        btn2 = types.KeyboardButton('–§–ú')
        btn3 = types.KeyboardButton('–§–Ü–¢–û')
        btn4 = types.KeyboardButton('–§–ï–ú')
        btn5 = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(btn1, btn2, btn3, btn4, btn5)

        bot.send_message(chat_id, '‚úÖ –í–∏–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π:', reply_markup=markup)

    if file_text in ['–§–ê–ú–Ü–¢', '–§–ú', '–§–Ü–¢–û', '–§–ï–ú']:

        bot.send_message(chat_id, "‚è≥ –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...")

        try:
            rating_files, page_url = rating_list_parser()
            faculty_map = {
                '–§–ê–ú–Ü–¢': '–§–ê–ú–Ü–¢',
                '–§–ú': '–§–ú',
                '–§–Ü–¢–û': '–§–Ü–¢–û',
                '–§–ï–ú': '–§–ï–ú'
            }

            found = False

            for name, url in rating_files:
                if faculty_map[file_text] in name:
                    response = requests.get(url)

                    if response.status_code == 200:
                        file_data = BytesIO(response.content)
                        file_data.name = name
                        caption = f"{file_text} | –†–µ–π—Ç–∏–Ω–≥ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É\n\n–î–∂–µ—Ä–µ–ª–æ: {page_url}"
                        bot.send_document(chat_id, file_data, caption=caption)
                        found = True
                        break

            if not found:
                bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {file_text}.")

        except Exception as e:
            bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}")

# -----------------------------------------------------------------------------------

    if file_text == "–°—Ç–∏–ø–µ–Ω–¥—ñ–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫":
        bot.send_message(chat_id, "‚è≥ –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...")

        try:
            file_url, file_name, file_text, page_url = scholarship_list_parser()
            response = requests.get(file_url)

            if response.status_code == 200:
                file_data = BytesIO(response.content)
                file_data.name = file_name
                caption = f"{file_text} \n\n–î–∂–µ—Ä–µ–ª–æ: {page_url}"
                bot.send_document(chat_id, file_data, caption=caption)
            else:
                bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {file_url}")

        except Exception as e:
            bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}")

# -----------------------------------------------------------------------------------

    if file_text == "–¢–∞–±–µ–ª—å-–∫–∞–ª–µ–Ω–¥–∞—Ä":
        bot.send_message(chat_id, "‚è≥ –û—Ç—Ä–∏–º—É—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é...")

        try:
            title, files, page_url = timetable_calendar_parser()

            media_group = []

            for idx, (name, url) in enumerate(files, start=1):
                response = requests.get(url)

                if response.status_code == 200:
                    file_data = BytesIO(response.content)
                    file_data.name = name if name.endswith('.pdf') else f"{name}.pdf"

                    caption = f"{idx}) {name}" if idx == 1 else f"{idx}) {name}\n\n–î–∂–µ—Ä–µ–ª–æ: {page_url}"
                    media_group.append(InputMediaDocument(media=file_data, caption=caption))
                else:
                    bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {url}")
                    return

            bot.send_media_group(chat_id, media_group)

        except Exception as e:
            bot.send_message(chat_id, f"‚ö†Ô∏è –ù–∞ –∂–∞–ª—å, –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}")


bot.polling()
